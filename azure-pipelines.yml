

trigger: none

pool: dev-infra-pool
jobs:
  - job: TERRAFORM_INIT
    steps: 
      - task: TerraformInstaller@1
        inputs:
          terraformVersion: 'latest'

      - task: TerraformTask@5
        inputs:
          provider: 'azurerm'
          command: 'init'
          backendServiceArm: 'kashi-dev-app'
          backendAzureRmStorageAccountName: 'devstg72'
          backendAzureRmContainerName: 'devcontainer72'
          backendAzureRmKey: 'terraform.tfstate'

      - task: TerraformTask@5
        inputs:
          provider: 'azurerm'
          command: 'validate'

  - job: TERRAFORM_PLAN
    dependsOn: TERRAFORM_INIT
    steps:

    - task: TerraformInstaller@1
      inputs:
        terraformVersion: 'latest'

    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: 'kashi-dev-app'
        backendAzureRmStorageAccountName: 'devstg72'
        backendAzureRmContainerName: 'devcontainer72'
        backendAzureRmKey: 'terraform.tfstate'

    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'plan'
        environmentServiceNameAzureRM: 'kashi-dev-app'

  - job: TERRAFORM_APPLY
    dependsOn: TERRAFORM_PLAN
    steps:

    - task: TerraformInstaller@1
      inputs:
        terraformVersion: 'latest'

    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: 'kashi-dev-app'
        backendAzureRmStorageAccountName: 'devstg72'
        backendAzureRmContainerName: 'devcontainer72'
        backendAzureRmKey: 'terraform.tfstate'

    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'apply'
        environmentServiceNameAzureRM: 'kashi-dev-app'
